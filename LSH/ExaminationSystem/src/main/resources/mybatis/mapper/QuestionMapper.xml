<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.zstu.examsys.mapper.QuestionMapper">
    <select id="getBanks" resultType="QuestionBank">
        SELECT `question_bank`.`id`,
        `name`,
        `author`,
        `nickname` AS `author_name`,
        `creation_time`,
        `private` AS `is_private`,
        (SELECT COUNT(*) FROM `question` WHERE `bank_id` = `id`) AS `count`
        FROM `question_bank`
        INNER JOIN `user` ON `user`.`id` = `author`
        <where>
            <if test="author != null">
                AND `author` = #{author}
            </if>
        </where>
        ORDER BY
        <choose>
            <when test="con.order == 'id'">
                `question_bank`.`id`
            </when>
            <when test='con.order == "name"'>
                `name`
            </when>
            <when test='con.order == "author"'>
                `author`
            </when>
            <when test='con.order == "authorName"'>
                `author_name`
            </when>
            <when test='con.order == "creationTime"'>
                `creation_time`
            </when>
            <when test='con.order == "isPrivate"'>
                `is_private`
            </when>
            <otherwise>
                `question_bank`.`id`
            </otherwise>
        </choose>
        <if test="con.desc">
            DESC
        </if>
        <if test="con.offset != null and con.max != null">
            LIMIT #{con.offset}, #{con.max}
        </if>
        ;
    </select>
    <select id="getBanksCount" resultType="int">
        SELECT
        COUNT(*) AS `count`
        FROM
        `question_bank`
        <where>
            <if test="author != null">
                AND `author` = #{author}
            </if>
        </where>
    </select>

    <select id="getQuestions" resultType="Question">
        SELECT `question`.`id`,
        `type`,
        `description`,
        `bank_id`,
        `question_bank`.`name` AS `bank_name`
        FROM `question`
        INNER JOIN `question_bank` ON `bank_id` = `question_bank`.`id`
        <where>
            <if test="bankId != null">
                AND `bank_id` = #{bankId}
            </if>
        </where>
        ORDER BY
        <choose>
            <when test="con.order == 'id'">
                `question`.`id`
            </when>
            <when test='con.order == "type"'>
                `type`
            </when>
            <when test='con.order == "description"'>
                `description`
            </when>
            <when test='con.order == "bank_id"'>
                `bank_id`
            </when>
            <when test='con.order == "bank_name"'>
                `bank_name`
            </when>
            <otherwise>
                `question`.`id`
            </otherwise>
        </choose>
        <if test="con.desc">
            DESC
        </if>
        <if test="con.offset != null and con.max != null">
            LIMIT #{con.offset}, #{con.max}
        </if>
        ;
    </select>

    <select id="getQuestionsCount" resultType="int">
        SELECT
        COUNT(*) AS `count`
        FROM
        `question`
        <where>
            <if test="author != null">
                AND `bank_id` = #{bankId}
            </if>
        </where>
    </select>

    <select id="getChoiceQuestions" resultType="ChoiceQuestion">
        SELECT `question`.*,
        `choice_question`.`id` AS `choice_id`,
        `choice`,
        `answer`
        FROM `choice_question`
        INNER JOIN `question` ON `question`.`id` = `question_id`
        <where>
            <if test="questionId != null">
                AND `question`.`id` = #{questionId}
            </if>
            <if test="bankId != null">
                AND `bank_id` = #{bankId}
            </if>
            <if test="type != null">
                AND `type` = #{type}
            </if>
        </where>
    </select>

    <select id="getNormalQuestions" resultType="NormalQuestion">
        SELECT `question`.*,
        `normal_question`.`id` AS `normal_id`,
        `answer`,
        JSON_LENGTH(`answer`) AS `answers_count`
        FROM `normal_question`
        INNER JOIN `question` ON `question`.`id` = `question_id`
        <where>
            <if test="questionId != null">
                AND `question`.`id` = #{questionId}
            </if>
            <if test="bankId != null">
                AND `bank_id` = #{bankId}
            </if>
            <if test="type != null">
                AND `type` = #{type}
            </if>
        </where>
    </select>

    <select id="getQuestionType" resultType="String">
        SELECT `type`
        FROM `question`
        WHERE `id` = #{id};
    </select>

    <insert id="addQuestion" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `question` (`id`,
                                `type`,
                                `description`,
                                `bank_id`)
        VALUES (#{id},
                #{type},
                #{description},
                #{bankId})
        ON DUPLICATE KEY UPDATE `type`        = #{type},
                                `description` = #{description};
    </insert>

    <update id="updateQuestion">
        UPDATE
            `question`
        SET `type`        = #{type},
            `description` = #{description}
        WHERE `id` = #{id};
    </update>

    <insert id="addChoiceQuestion" useGeneratedKeys="true" keyProperty="choiceId">
        INSERT INTO `choice_question` (`question_id`,
                                       `choice`,
                                       `answer`)
        VALUES (#{id},
                #{choice},
                #{answer})
        ON DUPLICATE KEY UPDATE `choice` = #{choice},
                                `answer` = #{answer};
    </insert>

    <update id="updateChoiceQuestion">
        UPDATE
            `choice_question`
        SET `choice` = #{choice},
            `answer` = #{answer}
        WHERE `question_id` = #{id};
    </update>

    <insert id="addNormalQuestion" useGeneratedKeys="true" keyProperty="normalId">
        INSERT INTO `normal_question` (`question_id`, `answer`)
        VALUES (#{id}, #{answer})
        ON DUPLICATE KEY UPDATE `answer` = #{answer};
    </insert>

    <update id="updateNormalQuestion">
        UPDATE
            `normal_question`
        SET `answer` = #{answer}
        WHERE `question_id` = #{id};
    </update>

    <delete id="deleteChoiceQuestion">
        DELETE
        FROM `choice_question`
        WHERE `question_id` = #{id};
    </delete>

    <delete id="deleteNormalQuestion">
        DELETE
        FROM `normal_question`
        WHERE `question_id` = #{id};
    </delete>

    <delete id="deleteQuestion">
        DELETE
        FROM
            `question`
        WHERE `id` = #{id};
    </delete>
</mapper>